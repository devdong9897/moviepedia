{"ast":null,"code":"var _jsxFileName = \"/Users/dongwooknam/Desktop/\\u110F\\u1169\\u1103\\u1173\\u110B\\u1175\\u11BA/moviepedia/src/components/FileInput.js\",\n  _s = $RefreshSig$();\nimport { useRef } from \"react\";\n\n// ReviewForm컴포넌트에서 props로 받음.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FileInput({\n  name,\n  value,\n  onChange\n}) {\n  _s();\n  const inputRef = useRef();\n  const handleChange = e => {\n    // 파일입력은 브라우저에서 관리하는 특별한 속성이므로 제어 컴포넌트 방식으로는 사용할 수 없다.\n    // 그래서 ref사용.\n    const nextValue = e.target.files[0];\n    onChange(name, nextValue);\n  };\n\n  // 버튼을 클릭했을 때 실행할 함수\n  const handleClearClick = () => {\n    const inputNode = inputRef.current;\n    if (!inputNode) return;\n    inputNode.value = \"\";\n    onChange(value, null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), value && /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(FileInput, \"iD9XNNsNOlNDckBemnvlLS+aHYk=\");\n_c = FileInput;\nexport default FileInput;\nvar _c;\n$RefreshReg$(_c, \"FileInput\");","map":{"version":3,"names":["useRef","jsxDEV","_jsxDEV","FileInput","name","value","onChange","_s","inputRef","handleChange","e","nextValue","target","files","handleClearClick","inputNode","current","children","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dongwooknam/Desktop/코드잇/moviepedia/src/components/FileInput.js"],"sourcesContent":["import { useRef } from \"react\";\n\n// ReviewForm컴포넌트에서 props로 받음.\nfunction FileInput({ name, value, onChange }) {\n  const inputRef = useRef();\n  const handleChange = (e) => {\n    // 파일입력은 브라우저에서 관리하는 특별한 속성이므로 제어 컴포넌트 방식으로는 사용할 수 없다.\n    // 그래서 ref사용.\n    const nextValue = e.target.files[0];\n    onChange(name, nextValue);\n  };\n\n  // 버튼을 클릭했을 때 실행할 함수\n  const handleClearClick = () => {\n    const inputNode = inputRef.current;\n    if (!inputNode) return;\n\n    inputNode.value = \"\";\n    onChange(value, null);\n  };\n\n  return (\n    <div>\n      <input type=\"file\" onChange={handleChange} />\n      {/* 파일 초기화 */}\n      {value && <button>X</button>}\n    </div>\n  );\n}\n\nexport default FileInput;\n"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,OAAO;;AAE9B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,SAASA,CAAC;EAAEC,IAAI;EAAEC,KAAK;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC5C,MAAMC,QAAQ,GAAGR,MAAM,CAAC,CAAC;EACzB,MAAMS,YAAY,GAAIC,CAAC,IAAK;IAC1B;IACA;IACA,MAAMC,SAAS,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACnCP,QAAQ,CAACF,IAAI,EAAEO,SAAS,CAAC;EAC3B,CAAC;;EAED;EACA,MAAMG,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,MAAMC,SAAS,GAAGP,QAAQ,CAACQ,OAAO;IAClC,IAAI,CAACD,SAAS,EAAE;IAEhBA,SAAS,CAACV,KAAK,GAAG,EAAE;IACpBC,QAAQ,CAACD,KAAK,EAAE,IAAI,CAAC;EACvB,CAAC;EAED,oBACEH,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAOgB,IAAI,EAAC,MAAM;MAACZ,QAAQ,EAAEG;IAAa;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAE5CjB,KAAK,iBAAIH,OAAA;MAAAe,QAAA,EAAQ;IAAC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEV;AAACf,EAAA,CAzBQJ,SAAS;AAAAoB,EAAA,GAATpB,SAAS;AA2BlB,eAAeA,SAAS;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}